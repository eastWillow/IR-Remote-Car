C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 14:45:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_REMOTE_CAR
OBJECT MODULE PLACED IN IR-Remote-Car.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR-Remote-Car.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          TA7267
   3          IN1 IN2 OUT1 OUT2
   4           1   1    L    L break
   5           0   1    L    H backward
   6           1   0    H    L forward
   7           0   0    Z    Z nothing
   8          */
   9          /*
  10          Wiring
  11            YELLOW
  12            BLACK
  13            RED
  14            YELLOW
  15            ORANGE
  16            BLUE
  17          */
  18          /*
  19            direction:
  20            0x01: //UP
  21            0x05: //UP+LEFT
  22            0x09: //UP+RIGHT
  23            0x02: //DOWN
  24            0x06: //DOWN+RIGHT
  25            0x0A: //DOWN+RIGHT
  26            0x04: //LEFT
  27            0x08: //RIGHT
  28          */
  29          #include <STC12C5A60S2.H>
  30          #include <intrins.h>
  31          #define ALL_WIDTH 20000 //20ms
  32          #define FULL 65535
  33          #define ADRESS 0xA5
  34          #define IRHIGH 1844
  35          #define IRLOW 524
  36          #define HEAD 8400
  37          sbit SERVOMOTOR1=P1^3; //PWM I/O
  38          sbit LIMITSWITCH=P3^2; // INT0
  39          sbit IR_RECEIVER=P3^3; // INT1
  40          sbit IN1=P0^1;
  41          sbit IN2=P0^2;
  42          unsigned int servoMotorHighTime = 1250;
  43          void setup();
  44          void Delay100ms();
  45          void UartInit (void);
  46          void uartSend (unsigned char number);
  47          /*void irReceiver() interrupt 2{
  48            unsigned int counter;
  49            unsigned char i;
  50            while(IR_RECEIVER == 0) counter++;
  51            if(counter >=15656){
  52              counter =0;
  53              while(IR_RECEIVER == 1)counter++;
  54              if(counter >= 3000){
  55                for(i=0;i<8;i++){
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 14:45:35 PAGE 2   

  56                  counter = 0;
  57                  while(IR_RECEIVER == 0)counter++;
  58                  if(counter >1844) IRdirection = IRdirection | _crol_(0x01,i);
  59                  while(IR_RECEIVER == 1);
  60                }
  61              }
  62            }
  63            if(counter <=15656) return;
  64          }*/
  65          void main(){
  66   1        unsigned char IRdirection;
  67   1        unsigned int counter;
  68   1        unsigned char i;
  69   1        setup();
  70   1        UartInit();
  71   1        while(1){
  72   2          while(IR_RECEIVER == 0) counter++;
  73   2          if(counter >=15656){
  74   3          counter =0;
  75   3          while(IR_RECEIVER == 1)counter++;
  76   3          if(counter >= 3000){
  77   4            for(i=0;i<8;i++){
  78   5              counter = 0;
  79   5              while(IR_RECEIVER == 0)counter++;
  80   5              if(counter >1844) IRdirection = IRdirection | _crol_(0x01,i);
  81   5              while(IR_RECEIVER == 1);
  82   5            }
  83   4          }
  84   3        }
  85   2        }
  86   1      }
  87          void setup(){
  88   1        EA = 1;
  89   1        ET0 = 1;
  90   1        EX0 = 1;
  91   1        //EX1 = 1;
  92   1        PX0 = 1;
  93   1        TR0 = 0; //reset Timer0 Switch
  94   1        TR0 = 0; //reset Timer1 Switch
  95   1        TMOD = 0x11; //0010 0010
  96   1        TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  97   1        TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  98   1        SERVOMOTOR1 = 0;
  99   1        TR0 = 1;
 100   1      }
 101          void servoMotor () interrupt 1 {
 102   1        TR0 = 0;
 103   1        if(SERVOMOTOR1){
 104   2          TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
 105   2          TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
 106   2          SERVOMOTOR1 = 0;
 107   2        }
 108   1        else{
 109   2          TL0 = (FULL - servoMotorHighTime) %256;
 110   2          TH0 = (FULL - servoMotorHighTime) / 256;
 111   2          SERVOMOTOR1 = 1;
 112   2        }
 113   1        TR0 = 1;
 114   1      }
 115          void limitSwitch () interrupt 0{
 116   1        IN1 =0;
 117   1        IN2 =1;
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 14:45:35 PAGE 3   

 118   1        Delay100ms();
 119   1        Delay100ms();
 120   1        Delay100ms();
 121   1        Delay100ms();
 122   1        Delay100ms();
 123   1      }
 124          void Delay100ms()   //@12.000MHz
 125          {
 126   1        unsigned char i, j, k;
 127   1      
 128   1        _nop_();
 129   1        _nop_();
 130   1        i = 5;
 131   1        j = 144;
 132   1        k = 71;
 133   1        do
 134   1        {
 135   2          do
 136   2          {
 137   3            while (--k);
 138   3          } while (--j);
 139   2        } while (--i);
 140   1      }
 141          void UartInit(void)   //9600bps@12.000MHz
 142          {
 143   1        PCON &= 0x7F;   //Baudrate no doubled
 144   1        SCON = 0x50;    //8bit and variable baudrate
 145   1        AUXR |= 0x04;   //BRT's clock is Fosc (1T)
 146   1        BRT = 0xD9;   //Set BRT's reload value
 147   1        AUXR |= 0x01;   //Use BRT as baudrate generator
 148   1        AUXR |= 0x10;   //BRT running
 149   1      }
 150          void uartSend (unsigned char number){
 151   1          SBUF = number;
 152   1          while(!TI);
 153   1          TI=0;
 154   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    538    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
