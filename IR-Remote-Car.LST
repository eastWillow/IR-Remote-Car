C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:43:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_REMOTE_CAR
OBJECT MODULE PLACED IN IR-Remote-Car.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR-Remote-Car.c OPTIMIZE(0,SPEED) BROWSE FLOATFUZZY(0) DEBUG OBJECTEXTEND T
                    -ABS(2)

line level    source

   1          /*
   2          TA7267
   3          IN1 IN2 OUT1 OUT2
   4           1   1    L    L break
   5           0   1    L    H backward
   6           1   0    H    L forward
   7           0   0    Z    Z nothing
   8          */
   9          /*
  10          Wiring
  11            YELLOW
  12            BLACK
  13            RED
  14            YELLOW
  15            ORANGE
  16            BLUE
  17          */
  18          /*
  19            direction:
  20            0x01: //UP
  21            0x05: //UP+LEFT
  22            0x09: //UP+RIGHT
  23            0x02: //DOWN
  24            0x06: //DOWN+RIGHT
  25            0x0A: //DOWN+RIGHT
  26            0x04: //LEFT
  27            0x08: //RIGHT
  28          */
  29          #include <STC12C5A60S2.H>
  30          #include <intrins.h>
  31          #define ALL_WIDTH 20000 //20ms
  32          #define FULL 65535
  33          #define ADRESS 0xA5
  34          #define IRHIGH 1844
  35          #define IRLOW 524
  36          #define HEAD 8400
  37          sbit SERVOMOTOR1=P1^3; //PWM I/O
  38          sbit LIMITSWITCH=P3^2; // INT0
  39          sbit IR_RECEIVER=P3^3; // INT1
  40          sbit IN1=P0^1;
  41          sbit IN2=P0^2;
  42          bit IrFlag;
  43          volatile char data IRdirection=0x00;
  44          volatile int data servoMotorHighTime = 1250;
  45          void setup();
  46          void Delay100ms();
  47          //void UartInit (void);
  48          //void uartSend (unsigned char number);
  49          void main(){
  50   1        setup();
  51   1        //UartInit();
  52   1        while(1){
  53   2          if(IRdirection != 0){
  54   3            switch(IRdirection){
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:43:36 PAGE 2   

  55   4            case 0x01:
  56   4              IN1 = 1;
  57   4              IN2 = 0;
  58   4              break;
  59   4            case 0x02:
  60   4              IN2 = 1;
  61   4              IN1 = 0;
  62   4              break;
  63   4            case 0x04:
  64   4              servoMotorHighTime = 1050;
  65   4              break;
  66   4            case 0x05:
  67   4              break;
  68   4            case 0x06:
  69   4              break;
  70   4            case 0x08:
  71   4              servoMotorHighTime = 1400;
  72   4              break;
  73   4            case 0x09:
  74   4              break;
  75   4            case 0x0A:
  76   4              break;
  77   4            case 0x03:
  78   4              IN1 = 1;
  79   4              IN2 = 1;
  80   4              servoMotorHighTime = 1250;
  81   4            break;
  82   4          }
  83   3          }
  84   2        }
  85   1      }
  86          void setup(){
  87   1        EA = 1;
  88   1        ET0 = 1;
  89   1        EX0 = 1;
  90   1        EX1 = 1;
  91   1        PX0 = 1;
  92   1        TR0 = 0; //reset Timer0 Switch
  93   1        TR0 = 0; //reset Timer1 Switch
  94   1        TMOD = 0x11; //0010 0010
  95   1        TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  96   1        TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  97   1        SERVOMOTOR1 = 0;
  98   1        TR0 = 1;
  99   1      }
 100          void servoMotor ()interrupt 1 {
 101   1        TR0 = 0;
 102   1        if(SERVOMOTOR1){
 103   2          TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
 104   2          TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
 105   2          SERVOMOTOR1 = 0;
 106   2        }
 107   1        else{
 108   2          TL0 = (FULL - servoMotorHighTime) %256;
 109   2          TH0 = (FULL - servoMotorHighTime) / 256;
 110   2          SERVOMOTOR1 = 1;
 111   2        }
 112   1        TR0 = 1;
 113   1      }
 114          void limitSwitch () interrupt 0{
 115   1        IN1 =1;
 116   1        IN2 =1;
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:43:36 PAGE 3   

 117   1      }
 118          void irReceiver()interrupt 2{
 119   1        unsigned int i;
 120   1        unsigned int counter;
 121   1        while(IR_RECEIVER == 0) counter++;
 122   1        if(counter <15656) return;
 123   1        if(counter >=15656){
 124   2          counter =0;
 125   2          while(IR_RECEIVER == 1)counter++;
 126   2          if(counter >= 3000){
 127   3            IRdirection = 0;
 128   3            for(i=0;i<8;i++){
 129   4              counter = 0;
 130   4              while(IR_RECEIVER == 0)counter++;
 131   4              if(counter >1000) IRdirection = IRdirection | _crol_(0x01,i);
 132   4              while(IR_RECEIVER == 1);
 133   4            }
 134   3          }
 135   2        }
 136   1      }
 137          void Delay100ms()   //@12.000MHz
 138          {
 139   1        unsigned char i, j, k;
 140   1      
 141   1        _nop_();
 142   1        _nop_();
 143   1        i = 5;
 144   1        j = 144;
 145   1        k = 71;
 146   1        do
 147   1        {
 148   2          do
 149   2          {
 150   3            while (--k);
 151   3          } while (--j);
 152   2        } while (--i);
 153   1      }
 154          
 155          /*void UartInit(void)   //9600bps@12.000MHz
 156          {
 157            PCON &= 0x7F;   //Baudrate no doubled
 158            SCON = 0x50;    //8bit and variable baudrate
 159            AUXR |= 0x04;   //BRT's clock is Fosc (1T)
 160            BRT = 0xD9;   //Set BRT's reload value
 161            AUXR |= 0x01;   //Use BRT as baudrate generator
 162            AUXR |= 0x10;   //BRT running
 163          }
 164          void uartSend (unsigned char number){
 165              SBUF = number;
 166              while(!TI);
 167              TI=0;
 168          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    668    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:43:36 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
