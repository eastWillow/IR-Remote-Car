C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 10:55:04 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_REMOTE_CAR
OBJECT MODULE PLACED IN IR-Remote-Car.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR-Remote-Car.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          TA7267
   3          IN1 IN2 OUT1 OUT2
   4           1   1    L    L break
   5           0   1    L    H backward
   6           1   0    H    L forward
   7           0   0    Z    Z nothing
   8          */
   9          /*
  10          Wiring
  11            YELLOW
  12            BLACK
  13            RED
  14            YELLOW
  15            ORANGE
  16            BLUE
  17          */
  18          /*
  19            direction:
  20            0x01: //UP
  21            0x05: //UP+LEFT
  22            0x09: //UP+RIGHT
  23            0x02: //DOWN
  24            0x06: //DOWN+RIGHT
  25            0x0A: //DOWN+RIGHT
  26            0x04: //LEFT
  27            0x08: //RIGHT
  28          */
  29          #include <STC12C5A60S2.H>
  30          #include <intrins.h>
  31          #define ALL_WIDTH 20000 //20ms
  32          #define FULL 65535
  33          #define ADRESS 0xA5
  34          #define IRHIGH 1844
  35          #define IRLOW 524
  36          #define HEAD 8400
  37          sbit SERVOMOTOR1=P1^3; //PWM I/O
  38          sbit LIMITSWITCH=P3^2; // INT0
  39          sbit IR_RECEIVER=P3^3; // INT1
  40          sbit IN1=P0^1;
  41          sbit IN2=P0^2;
  42          unsigned char IRdirection;
  43          unsigned int servoMotorHighTime = 1250;
  44          void setup();
  45          void Delay100ms();
  46          void UartInit (void);
  47          void uartSend (unsigned char number);
  48          void main(){
  49   1        setup();
  50   1        UartInit();
  51   1        while(1){
  52   2          if(IRdirection == 0x04) servoMotorHighTime = 1000;
  53   2          if(IRdirection == 0x04) servoMotorHighTime = 1500;
  54   2        }
  55   1      }
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 10:55:04 PAGE 2   

  56          void setup(){
  57   1        EA = 1;
  58   1        ET0 = 1;
  59   1        EX0 = 1;
  60   1        EX1 = 1;
  61   1        PX0 = 1;
  62   1        TR0 = 0; //reset Timer0 Switch
  63   1        TR0 = 0; //reset Timer1 Switch
  64   1        TMOD = 0x11; //0010 0010
  65   1        TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  66   1        TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  67   1        SERVOMOTOR1 = 0;
  68   1        TR0 = 1;
  69   1      }
  70          void servoMotor () interrupt 1 {
  71   1        TR0 = 0;
  72   1        if(SERVOMOTOR1){
  73   2          TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  74   2          TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  75   2          SERVOMOTOR1 = 0;
  76   2        }
  77   1        else{
  78   2          TL0 = (FULL - servoMotorHighTime) %256;
  79   2          TH0 = (FULL - servoMotorHighTime) / 256;
  80   2          SERVOMOTOR1 = 1;
  81   2        }
  82   1        TR0 = 1;
  83   1      }
  84          void limitSwitch () interrupt 0{
  85   1        IN1 =0;
  86   1        IN2 =1;
  87   1        Delay100ms();
  88   1        Delay100ms();
  89   1        Delay100ms();
  90   1        Delay100ms();
  91   1        Delay100ms();
  92   1      }
  93          void Delay100ms()   //@12.000MHz
  94          {
  95   1        unsigned char i, j, k;
  96   1      
  97   1        _nop_();
  98   1        _nop_();
  99   1        i = 5;
 100   1        j = 144;
 101   1        k = 71;
 102   1        do
 103   1        {
 104   2          do
 105   2          {
 106   3            while (--k);
 107   3          } while (--j);
 108   2        } while (--i);
 109   1      }
 110          void irReceiver() interrupt 2{
 111   1        unsigned int counter;
 112   1        while(IR_RECEIVER == 0) counter++;
 113   1        if (counter == 7906){
 114   2          uartSend(counter >> 8);
 115   2          uartSend(counter);
 116   2        }
 117   1        /*unsigned int counter;
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/15/2014 10:55:04 PAGE 3   

 118   1        unsigned char adress;
 119   1        int i;
 120   1        IRdirection = 0;
 121   1        while(IR_RECEIVER == 0) counter++;
 122   1        uartSend(counter);
 123   1        if (counter >= HEAD){
 124   1          counter = 0;
 125   1          while(IR_RECEIVER == 1);
 126   1          while(IR_RECEIVER == 0);
 127   1          while(IR_RECEIVER == 1) counter++;
 128   1        }
 129   1        else{
 130   1          counter = 0;
 131   1          while(IR_RECEIVER == 1) counter++;
 132   1        }
 133   1        //Start Coding
 134   1        if (counter >= IRHIGH) adress = adress | 0x01;
 135   1        for(i=0;i<7;i++){
 136   1          while(IR_RECEIVER == 0);
 137   1          counter = 0;
 138   1          while(IR_RECEIVER == 1) counter++;
 139   1          if (counter >= IRHIGH) adress = adress | (0x02 << i);
 140   1        }
 141   1        for(i=0;i<8;i++){
 142   1          while(IR_RECEIVER == 0);
 143   1          counter = 0;
 144   1          while(IR_RECEIVER == 1) counter++;
 145   1          if (counter >= IRHIGH) IRdirection = IRdirection | (0x01 << i);
 146   1        }*/
 147   1      }
 148          void UartInit(void)   //9600bps@12.000MHz
 149          {
 150   1        PCON &= 0x7F;   //Baudrate no doubled
 151   1        SCON = 0x50;    //8bit and variable baudrate
 152   1        AUXR |= 0x04;   //BRT's clock is Fosc (1T)
 153   1        BRT = 0xD9;   //Set BRT's reload value
 154   1        AUXR |= 0x01;   //Use BRT as baudrate generator
 155   1        AUXR |= 0x10;   //BRT running
 156   1      }
 157          void uartSend (unsigned char number){
 158   1          SBUF = number;
 159   1          while(!TI);
 160   1          TI=0;
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    540    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
