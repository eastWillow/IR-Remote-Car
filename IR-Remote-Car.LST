C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/14/2014 17:39:42 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_REMOTE_CAR
OBJECT MODULE PLACED IN IR-Remote-Car.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR-Remote-Car.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          TA7267
   3          IN1 IN2 OUT1 OUT2
   4           1   1    L    L break
   5           0   1    L    H backward
   6           1   0    H    L forward
   7           0   0    Z    Z nothing
   8          */
   9          /*
  10          Wiring
  11            YELLOW
  12            BLACK
  13            RED
  14            YELLOW
  15            ORANGE
  16            BLUE
  17          */
  18          #include <STC12C5A60S2.H>
  19          #include <intrins.h>
  20          #define ALL_WIDTH 20000 //20ms
  21          #define FULL 65535
  22          #define ADRESS 0xA5
  23          #define IRHIGH 1844
  24          #define IRLOW 524
  25          sbit SERVOMOTOR1=P1^3; //PWM I/O
  26          sbit LIMITSWITCH=P3^2; // INT0
  27          sbit IR_RECEIVER=P3^3; // INT1
  28          sbit IN1=P0^1;
  29          sbit IN2=P0^2;
  30          bit repeat;
  31          unsigned int servoMotorHighTime = 1250;
  32          void setup();
  33          void Delay100ms();
  34          unsigned char irReceiver();
  35          void uartSend (char *string,char len,char EOL);
  36          void UartInit(void);
  37          void main(){
  38   1        char debug[1];
  39   1        setup();
  40   1        UartInit();
  41   1        while(1){
  42   2          uartSend("Wellcom",7,1);
  43   2          debug[0] = irReceiver();
  44   2          uartSend(debug,1,1);
  45   2          Delay100ms();
  46   2        }
  47   1      }
  48          void setup(){
  49   1        EA = 1;
  50   1        ET0 = 1;
  51   1        EX0 = 1;
  52   1        PX0 = 1;
  53   1        TR0 = 0; //reset Timer0 Switch
  54   1        TR0 = 0; //reset Timer1 Switch
  55   1        TMOD = 0x11; //0010 0010
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/14/2014 17:39:42 PAGE 2   

  56   1        TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  57   1        TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  58   1        SERVOMOTOR1 = 0;
  59   1        TR0 = 1;
  60   1      }
  61          void servoMotor () interrupt 1 {
  62   1        TR0 = 0;
  63   1        if(SERVOMOTOR1){
  64   2          TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
  65   2          TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
  66   2          SERVOMOTOR1 = 0;
  67   2        }
  68   1        else{
  69   2          TL0 = (FULL - servoMotorHighTime) %256;
  70   2          TH0 = (FULL - servoMotorHighTime) / 256;
  71   2          SERVOMOTOR1 = 1;
  72   2        }
  73   1        TR0 = 1;
  74   1      }
  75          void limitSwitch () interrupt 0{
  76   1        IN1 =0;
  77   1        IN2 =1;
  78   1        Delay100ms();
  79   1        Delay100ms();
  80   1        Delay100ms();
  81   1        Delay100ms();
  82   1        Delay100ms();
  83   1      }
  84          void Delay100ms()   //@12.000MHz
  85          {
  86   1        unsigned char i, j, k;
  87   1      
  88   1        _nop_();
  89   1        _nop_();
  90   1        i = 5;
  91   1        j = 144;
  92   1        k = 71;
  93   1        do
  94   1        {
  95   2          do
  96   2          {
  97   3            while (--k);
  98   3          } while (--j);
  99   2        } while (--i);
 100   1      }
 101          unsigned char irReceiver(){
 102   1        unsigned char adress;
 103   1        unsigned char direction;
 104   1        unsigned char counter;
 105   1        unsigned char timeCounter;
 106   1        while(!IR_RECEIVER) timeCounter++;
 107   1        if(timeCounter > 8400){
 108   2          while(IR_RECEIVER);
 109   2          while(!IR_RECEIVER);
 110   2        }
 111   1        //starting
 112   1        for(counter = 0;counter <8;counter++){
 113   2          while(IR_RECEIVER) timeCounter++;
 114   2          if(timeCounter > IRHIGH) adress | (0x01 << counter);
*** WARNING C275 IN LINE 114 OF IR-Remote-Car.c: expression with possibly no effect
 115   2          else if(timeCounter > IRLOW) adress | (0x00 << counter);
*** WARNING C275 IN LINE 115 OF IR-Remote-Car.c: expression with possibly no effect
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/14/2014 17:39:42 PAGE 3   

 116   2          while(!IR_RECEIVER);
 117   2        }
 118   1        for(counter = 0;counter <8;counter++){
 119   2          while(IR_RECEIVER) timeCounter++;
 120   2          if(timeCounter > IRHIGH) direction | (0x01 << counter);
*** WARNING C275 IN LINE 120 OF IR-Remote-Car.c: expression with possibly no effect
 121   2          else if(timeCounter > IRLOW) direction | (0x00 << counter);
*** WARNING C275 IN LINE 121 OF IR-Remote-Car.c: expression with possibly no effect
 122   2          while(!IR_RECEIVER);
 123   2        }
 124   1        while(!IR_RECEIVER);
 125   1        if(adress == ADRESS) return direction;
 126   1      }
 127          void UartInit(void)   //9600bps@12.000MHz
 128          {
 129   1        PCON &= 0x7F;   //Baudrate no doubled
 130   1        SCON = 0x50;    //8bit and variable baudrate
 131   1        AUXR |= 0x04;   //BRT's clock is Fosc (1T)
 132   1        BRT = 0xD9;   //Set BRT's reload value
 133   1        AUXR |= 0x01;   //Use BRT as baudrate generator
 134   1        AUXR |= 0x10;   //BRT running
 135   1      }
 136          void uartSend (char *string,char len,char EOL){
 137   1        int i;
 138   1        for(i=0;i<len;i++){
 139   2          SBUF = string[i];
 140   2          while(!TI);
 141   2          TI=0;
 142   2        }
 143   1        if(EOL == 1){
 144   2          SBUF = 0x0D;
 145   2          while(!TI);
 146   2          TI=0;
 147   2          SBUF = 0x0A;
 148   2          while(!TI);
 149   2          TI=0;
 150   2        }
 151   1      }
*** WARNING C291 IN LINE 126 OF IR-Remote-Car.c: not every exit path returns a value


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    603    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  5 WARNING(S),  0 ERROR(S)
