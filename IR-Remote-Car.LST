C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:49:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE IR_REMOTE_CAR
OBJECT MODULE PLACED IN IR-Remote-Car.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR-Remote-Car.c OPTIMIZE(0,SPEED) BROWSE FLOATFUZZY(0) DEBUG OBJECTEXTEND T
                    -ABS(2)

line level    source

   1          /*
   2          TA7267
   3          IN1 IN2 OUT1 OUT2
   4           1   1    L    L break
   5           0   1    L    H backward
   6           1   0    H    L forward
   7           0   0    Z    Z nothing
   8          */
   9          /*
  10          Wiring
  11            YELLOW
  12            BLACK
  13            RED
  14            YELLOW
  15            ORANGE
  16            BLUE
  17          */
  18          /*
  19            direction:
  20            0x01: //UP
  21            0x05: //UP+LEFT
  22            0x09: //UP+RIGHT
  23            0x02: //DOWN
  24            0x06: //DOWN+RIGHT
  25            0x0A: //DOWN+RIGHT
  26            0x04: //LEFT
  27            0x08: //RIGHT
  28          */
  29          #include <STC12C5A60S2.H>
  30          #include <intrins.h>
  31          #define ALL_WIDTH 20000 //20ms
  32          #define FULL 65535
  33          #define ADRESS 0xA5
  34          #define IRHIGH 1844
  35          #define IRLOW 524
  36          #define HEAD 8400
  37          sbit SERVOMOTOR1=P1^3; //PWM I/O
  38          sbit LIMITSWITCH=P3^2; // INT0
  39          sbit IR_RECEIVER=P3^3; // INT1
  40          sbit IN1=P0^1;
  41          sbit IN2=P0^2;
  42          bit IrFlag;
  43          volatile char data IRdirection=0x00;
  44          volatile int data servoMotorHighTime = 1250;
  45          void setup();
  46          void Delay100ms();
  47          //void UartInit (void);
  48          //void uartSend (unsigned char number);
  49          void main(){
  50   1        setup();
  51   1        //UartInit();
  52   1        while(1){
  53   2          if(IRdirection != 0){
  54   3            switch(IRdirection){
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:49:16 PAGE 2   

  55   4            case 0x01:
  56   4              IN1 = 1;
  57   4              IN2 = 0;
  58   4              servoMotorHighTime = 1250;
  59   4              break;
  60   4            case 0x02:
  61   4              IN1 = 0;
  62   4              IN2 = 1;
  63   4              servoMotorHighTime = 1250;
  64   4              break;
  65   4            case 0x04:
  66   4              servoMotorHighTime = 1050;
  67   4              break;
  68   4            case 0x05:
  69   4              IN1 = 1;
  70   4              IN2 = 0;
  71   4              servoMotorHighTime = 1050;
  72   4              break;
  73   4            case 0x06:
  74   4              IN1 = 0;
  75   4              IN2 = 1;
  76   4              servoMotorHighTime = 1050;
  77   4              break;
  78   4            case 0x08:
  79   4              servoMotorHighTime = 1400;
  80   4              break;
  81   4            case 0x09:
  82   4              IN1 = 1;
  83   4              IN2 = 0;
  84   4              servoMotorHighTime = 1400;
  85   4              break;
  86   4            case 0x0A:
  87   4              IN1 = 0;
  88   4              IN2 = 1;
  89   4              servoMotorHighTime = 1400;
  90   4              break;
  91   4            case 0x03:
  92   4              IN1 = 1;
  93   4              IN2 = 1;
  94   4            break;
  95   4          }
  96   3          }
  97   2        }
  98   1      }
  99          void setup(){
 100   1        EA = 1;
 101   1        ET0 = 1;
 102   1        EX0 = 1;
 103   1        EX1 = 1;
 104   1        PX1 = 1;
 105   1        TR0 = 0; //reset Timer0 Switch
 106   1        TR0 = 0; //reset Timer1 Switch
 107   1        TMOD = 0x11; //0010 0010
 108   1        TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
 109   1        TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
 110   1        SERVOMOTOR1 = 0;
 111   1        TR0 = 1;
 112   1      }
 113          void servoMotor ()interrupt 1 {
 114   1        TR0 = 0;
 115   1        if(SERVOMOTOR1){
 116   2          TL0 = (FULL - ALL_WIDTH - servoMotorHighTime) %256;
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:49:16 PAGE 3   

 117   2          TH0 = (FULL - ALL_WIDTH - servoMotorHighTime) / 256;
 118   2          SERVOMOTOR1 = 0;
 119   2        }
 120   1        else{
 121   2          TL0 = (FULL - servoMotorHighTime) %256;
 122   2          TH0 = (FULL - servoMotorHighTime) / 256;
 123   2          SERVOMOTOR1 = 1;
 124   2        }
 125   1        TR0 = 1;
 126   1      }
 127          void limitSwitch () interrupt 0{
 128   1        IN1 =1;
 129   1        IN2 =1;
 130   1      }
 131          void irReceiver()interrupt 2{
 132   1        unsigned int i;
 133   1        unsigned int counter;
 134   1        while(IR_RECEIVER == 0) counter++;
 135   1        if(counter <15656) return;
 136   1        if(counter >=15656){
 137   2          counter =0;
 138   2          while(IR_RECEIVER == 1)counter++;
 139   2          if(counter >= 3000){
 140   3            IRdirection = 0;
 141   3            for(i=0;i<8;i++){
 142   4              counter = 0;
 143   4              while(IR_RECEIVER == 0)counter++;
 144   4              if(counter >1000) IRdirection = IRdirection | _crol_(0x01,i);
 145   4              while(IR_RECEIVER == 1);
 146   4            }
 147   3          }
 148   2        }
 149   1      }
 150          void Delay100ms()   //@12.000MHz
 151          {
 152   1        unsigned char i, j, k;
 153   1      
 154   1        _nop_();
 155   1        _nop_();
 156   1        i = 5;
 157   1        j = 144;
 158   1        k = 71;
 159   1        do
 160   1        {
 161   2          do
 162   2          {
 163   3            while (--k);
 164   3          } while (--j);
 165   2        } while (--i);
 166   1      }
 167          
 168          /*void UartInit(void)   //9600bps@12.000MHz
 169          {
 170            PCON &= 0x7F;   //Baudrate no doubled
 171            SCON = 0x50;    //8bit and variable baudrate
 172            AUXR |= 0x04;   //BRT's clock is Fosc (1T)
 173            BRT = 0xD9;   //Set BRT's reload value
 174            AUXR |= 0x01;   //Use BRT as baudrate generator
 175            AUXR |= 0x10;   //BRT running
 176          }
 177          void uartSend (unsigned char number){
 178              SBUF = number;
C51 COMPILER V9.52.0.0   IR_REMOTE_CAR                                                     07/16/2014 10:49:16 PAGE 4   

 179              while(!TI);
 180              TI=0;
 181          }*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    716    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
